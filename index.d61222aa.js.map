{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$restartButton = document.querySelector(\".button.restart\");\nvar $197cd56b15c33885$var$allRows = document.querySelectorAll(\".field-row\");\nvar $197cd56b15c33885$var$allCells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message.message-win\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message.message-lose\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message.message-start\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        Object.freeze(this.initialState);\n        this.gameBoard = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.generateTile(2);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.gameBoard = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.status = \"idle\";\n                this.score = 0;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.gameBoard;\n            }\n        },\n        {\n            key: \"isGameBoardFull\",\n            value: function isGameBoardFull() {\n                return this.gameBoard.flat().every(function(n) {\n                    return n !== 0;\n                });\n            }\n        },\n        {\n            key: \"generateTile\",\n            value: function generateTile() {\n                var times = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n                if (this.isGameBoardFull()) return;\n                for(var n = 0; n < times; n++){\n                    var newTilePosition = void 0;\n                    do newTilePosition = [\n                        Math.floor(Math.random() * 4),\n                        Math.floor(Math.random() * 4)\n                    ];\n                    while (this.gameBoard[newTilePosition[0]][newTilePosition[1]] !== 0);\n                    var addedNumber = Math.random() < 0.9 ? 2 : 4;\n                    this.gameBoard[newTilePosition[0]][newTilePosition[1]] = addedNumber;\n                    this.checkForWin();\n                    this.checkForLose();\n                }\n            }\n        },\n        {\n            key: \"checkForWin\",\n            value: function checkForWin() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.gameBoard[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                        try {\n                            for(var _iterator1 = row[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                                var n = _step1.value;\n                                if (n === 2048) this.status = \"win\";\n                            }\n                        } catch (err) {\n                            _didIteratorError1 = true;\n                            _iteratorError1 = err;\n                        } finally{\n                            try {\n                                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                                    _iterator1.return();\n                                }\n                            } finally{\n                                if (_didIteratorError1) {\n                                    throw _iteratorError1;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"checkForLose\",\n            value: function checkForLose() {\n                if (!this.canMove()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                if (this.status !== \"playing\") return;\n                switch(direction){\n                    case \"left\":\n                        this.moveLeft();\n                        break;\n                    case \"right\":\n                        this.moveRight();\n                        break;\n                    case \"up\":\n                        this.moveUp();\n                        break;\n                    case \"down\":\n                        this.moveDown();\n                        break;\n                }\n                this.checkForWin();\n                this.checkForLose();\n            }\n        },\n        {\n            key: \"transposeState\",\n            value: function transposeState(state) {\n                var result = [];\n                for(var col = 0; col < 4; col++){\n                    result[col] = [];\n                    for(var row = 0; row < 4; row++)result[col][row] = state[row][col];\n                }\n                return result;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var withGeneration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var row = 0; row < this.gameBoard.length; row++){\n                    var newRow = this.shiftAndMerge(this.gameBoard[row]);\n                    if (newRow.join(\"\") !== this.gameBoard[row].join(\"\")) moved = true;\n                    this.gameBoard[row] = newRow;\n                }\n                if (withGeneration && moved) this.generateTile();\n                return moved;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var withGeneration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var row = 0; row < this.gameBoard.length; row++){\n                    var reversedRow = this.gameBoard[row].slice().reverse();\n                    var newRow = this.shiftAndMerge(reversedRow).reverse();\n                    if (newRow.join(\"\") !== this.gameBoard[row].join(\"\")) moved = true;\n                    this.gameBoard[row] = newRow;\n                }\n                if (withGeneration && moved) this.generateTile();\n                return moved;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status !== \"playing\") return;\n                this.gameBoard = this.transposeState(this.gameBoard);\n                var moved = this.moveLeft(false);\n                this.gameBoard = this.transposeState(this.gameBoard);\n                if (moved) this.generateTile();\n                return moved;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status !== \"playing\") return;\n                this.gameBoard = this.transposeState(this.gameBoard);\n                var moved = this.moveRight(false);\n                this.gameBoard = this.transposeState(this.gameBoard);\n                if (moved) this.generateTile();\n                return moved;\n            }\n        },\n        {\n            key: \"shiftAndMerge\",\n            value: function shiftAndMerge(row) {\n                var shifted = row.filter(function(val) {\n                    return val !== 0;\n                });\n                for(var i = 0; i < shifted.length - 1; i++)if (shifted[i] === shifted[i + 1]) {\n                    shifted[i] *= 2;\n                    this.score += shifted[i];\n                    shifted.splice(i + 1, 1);\n                }\n                while(shifted.length < 4)shifted.push(0);\n                return shifted;\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var row = 0; row < this.gameBoard.length; row++)for(var col = 0; col < this.gameBoard[row].length; col++){\n                    if (this.gameBoard[row][col] === 0) return true;\n                    if (col < 3 && this.gameBoard[row][col] === this.gameBoard[row][col + 1]) return true;\n                    if (row < 3 && this.gameBoard[row][col] === this.gameBoard[row + 1][col]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nfunction $197cd56b15c33885$var$addCellClass() {\n    $197cd56b15c33885$var$allCells.forEach(function(cell) {\n        cell.className = \"field-cell\";\n        if (cell.innerHTML) cell.classList.add(\"field-cell--\".concat(cell.innerHTML));\n    });\n}\nfunction $197cd56b15c33885$var$render() {\n    $197cd56b15c33885$var$game.getState().forEach(function(row, rowIndex) {\n        row.forEach(function(cell, cellIndex) {\n            var cellElement = $197cd56b15c33885$var$allRows[rowIndex].children[cellIndex];\n            cellElement.innerHTML = cell || \"\";\n        });\n    });\n    $197cd56b15c33885$var$addCellClass();\n    $197cd56b15c33885$var$gameScore.innerHTML = $197cd56b15c33885$var$game.getScore();\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case \"win\":\n            $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n            break;\n        case \"playing\":\n            $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n            break;\n        case \"idle\":\n        default:\n            $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n            break;\n    }\n}\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$startButton.classList.add(\"hidden\");\n    $197cd56b15c33885$var$restartButton.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$render();\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$startButton.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$restartButton.classList.add(\"hidden\");\n    $197cd56b15c33885$var$render();\n    document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\n$197cd56b15c33885$var$restartButton.addEventListener(\"click\", $197cd56b15c33885$var$restartGame);\nvar $197cd56b15c33885$var$isKeyPressed = false;\nfunction $197cd56b15c33885$var$handleKeyPress(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\" && !$197cd56b15c33885$var$isKeyPressed) {\n        $197cd56b15c33885$var$isKeyPressed = true;\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n            default:\n                $197cd56b15c33885$var$isKeyPressed = false;\n                return;\n        }\n        $197cd56b15c33885$var$game.checkForWin();\n        $197cd56b15c33885$var$game.checkForLose();\n        $197cd56b15c33885$var$render();\n        if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n    }\n}\nfunction $197cd56b15c33885$var$handleKeyUp() {\n    $197cd56b15c33885$var$isKeyPressed = false;\n}\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\ndocument.addEventListener(\"keyup\", $197cd56b15c33885$var$handleKeyUp);\n\n})();\n//# sourceMappingURL=index.d61222aa.js.map\n","'use strict';\n\nconst startButton = document.querySelector('.button.start');\nconst restartButton = document.querySelector('.button.restart');\nconst allRows = document.querySelectorAll('.field-row');\nconst allCells = document.querySelectorAll('.field-cell');\n\nconst winMessage = document.querySelector('.message.message-win');\nconst loseMessage = document.querySelector('.message.message-lose');\nconst startMessage = document.querySelector('.message.message-start');\nconst gameScore = document.querySelector('.game-score');\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nfunction addCellClass() {\n  allCells.forEach((cell) => {\n    cell.className = 'field-cell';\n\n    if (cell.innerHTML) {\n      cell.classList.add(`field-cell--${cell.innerHTML}`);\n    }\n  });\n}\n\nfunction render() {\n  game.getState().forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      const cellElement = allRows[rowIndex].children[cellIndex];\n\n      cellElement.innerHTML = cell || '';\n    });\n  });\n\n  addCellClass();\n\n  gameScore.innerHTML = game.getScore();\n\n  switch (game.getStatus()) {\n    case 'win':\n      winMessage.classList.remove('hidden');\n      loseMessage.classList.add('hidden');\n      startMessage.classList.add('hidden');\n      break;\n    case 'lose':\n      loseMessage.classList.remove('hidden');\n      winMessage.classList.add('hidden');\n      startMessage.classList.add('hidden');\n      break;\n    case 'playing':\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n      startMessage.classList.add('hidden');\n      break;\n    case 'idle':\n    default:\n      startMessage.classList.remove('hidden');\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n      break;\n  }\n}\n\nfunction startGame() {\n  game.start();\n\n  startButton.classList.add('hidden');\n  restartButton.classList.remove('hidden');\n\n  render();\n\n  document.addEventListener('keydown', handleKeyPress);\n}\n\nfunction restartGame() {\n  game.restart();\n\n  startButton.classList.remove('hidden');\n  restartButton.classList.add('hidden');\n\n  render();\n\n  document.removeEventListener('keydown', handleKeyPress);\n}\n\nstartButton.addEventListener('click', startGame);\nrestartButton.addEventListener('click', restartGame);\n\nlet isKeyPressed = false;\n\nfunction handleKeyPress(e) {\n  if (game.getStatus() === 'playing' && !isKeyPressed) {\n    isKeyPressed = true;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n      default:\n        isKeyPressed = false;\n\n        return;\n    }\n\n    game.checkForWin();\n    game.checkForLose();\n    render();\n\n    if (game.getStatus() !== 'playing') {\n      document.removeEventListener('keydown', handleKeyPress);\n    }\n  }\n}\n\nfunction handleKeyUp() {\n  isKeyPressed = false;\n}\n\ndocument.addEventListener('keydown', handleKeyPress);\ndocument.addEventListener('keyup', handleKeyUp);\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState.map((row) => [...row]);\n    Object.freeze(this.initialState);\n    this.gameBoard = this.initialState.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.generateTile(2);\n  }\n\n  restart() {\n    this.gameBoard = this.initialState.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  getScore() {\n    return this.score;\n  }\n  getState() {\n    return this.gameBoard;\n  }\n\n  isGameBoardFull() {\n    return this.gameBoard.flat().every((n) => n !== 0);\n  }\n\n  generateTile(times = 1) {\n    if (this.isGameBoardFull()) {\n      return;\n    }\n\n    for (let n = 0; n < times; n++) {\n      let newTilePosition;\n\n      do {\n        newTilePosition = [\n          Math.floor(Math.random() * 4),\n          Math.floor(Math.random() * 4),\n        ];\n      } while (this.gameBoard[newTilePosition[0]][newTilePosition[1]] !== 0);\n\n      const addedNumber = Math.random() < 0.9 ? 2 : 4;\n\n      this.gameBoard[newTilePosition[0]][newTilePosition[1]] = addedNumber;\n\n      this.checkForWin();\n      this.checkForLose();\n    }\n  }\n\n  checkForWin() {\n    for (const row of this.gameBoard) {\n      for (const n of row) {\n        if (n === 2048) {\n          this.status = 'win';\n        }\n      }\n    }\n  }\n\n  checkForLose() {\n    if (!this.canMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    switch (direction) {\n      case 'left':\n        this.moveLeft();\n        break;\n      case 'right':\n        this.moveRight();\n        break;\n      case 'up':\n        this.moveUp();\n        break;\n      case 'down':\n        this.moveDown();\n        break;\n    }\n\n    this.checkForWin();\n    this.checkForLose();\n  }\n\n  transposeState(state) {\n    const result = [];\n\n    for (let col = 0; col < 4; col++) {\n      result[col] = [];\n\n      for (let row = 0; row < 4; row++) {\n        result[col][row] = state[row][col];\n      }\n    }\n\n    return result;\n  }\n\n  moveLeft(withGeneration = true) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let row = 0; row < this.gameBoard.length; row++) {\n      const newRow = this.shiftAndMerge(this.gameBoard[row]);\n\n      if (newRow.join('') !== this.gameBoard[row].join('')) {\n        moved = true;\n      }\n      this.gameBoard[row] = newRow;\n    }\n\n    if (withGeneration && moved) {\n      this.generateTile();\n    }\n\n    return moved;\n  }\n  moveRight(withGeneration = true) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let row = 0; row < this.gameBoard.length; row++) {\n      const reversedRow = this.gameBoard[row].slice().reverse();\n      const newRow = this.shiftAndMerge(reversedRow).reverse();\n\n      if (newRow.join('') !== this.gameBoard[row].join('')) {\n        moved = true;\n      }\n      this.gameBoard[row] = newRow;\n    }\n\n    if (withGeneration && moved) {\n      this.generateTile();\n    }\n\n    return moved;\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    this.gameBoard = this.transposeState(this.gameBoard);\n\n    const moved = this.moveLeft(false);\n\n    this.gameBoard = this.transposeState(this.gameBoard);\n\n    if (moved) {\n      this.generateTile();\n    }\n\n    return moved;\n  }\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    this.gameBoard = this.transposeState(this.gameBoard);\n\n    const moved = this.moveRight(false);\n\n    this.gameBoard = this.transposeState(this.gameBoard);\n\n    if (moved) {\n      this.generateTile();\n    }\n\n    return moved;\n  }\n\n  shiftAndMerge(row) {\n    const shifted = row.filter((val) => val !== 0);\n\n    for (let i = 0; i < shifted.length - 1; i++) {\n      if (shifted[i] === shifted[i + 1]) {\n        shifted[i] *= 2;\n        this.score += shifted[i];\n        shifted.splice(i + 1, 1);\n      }\n    }\n\n    while (shifted.length < 4) {\n      shifted.push(0);\n    }\n\n    return shifted;\n  }\n\n  canMove() {\n    for (let row = 0; row < this.gameBoard.length; row++) {\n      for (let col = 0; col < this.gameBoard[row].length; col++) {\n        if (this.gameBoard[row][col] === 0) {\n          return true;\n        }\n\n        if (\n          col < 3 &&\n          this.gameBoard[row][col] === this.gameBoard[row][col + 1]\n        ) {\n          return true;\n        }\n\n        if (\n          row < 3 &&\n          this.gameBoard[row][col] === this.gameBoard[row + 1][col]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$restartButton","$197cd56b15c33885$var$allRows","querySelectorAll","$197cd56b15c33885$var$allCells","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$gameScore","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","map","row","freeze","gameBoard","status","score","key","value","generateTile","flat","every","times","isGameBoardFull","newTilePosition","Math","floor","random","addedNumber","checkForWin","checkForLose","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","err","return","canMove","direction","moveLeft","moveRight","moveUp","moveDown","state","result","col","withGeneration","moved","newRow","shiftAndMerge","join","reversedRow","reverse","transposeState","shifted","filter","val","splice","push","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$render","getState","forEach","rowIndex","cell","cellIndex","cellElement","children","innerHTML","className","classList","add","concat","getScore","getStatus","remove","addEventListener","start","$197cd56b15c33885$var$handleKeyPress","restart","removeEventListener","$197cd56b15c33885$var$isKeyPressed","e"],"version":3,"file":"index.d61222aa.js.map"}